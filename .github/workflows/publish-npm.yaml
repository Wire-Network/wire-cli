name: Deploy to npm

on:
  push:
    tags:
      - 'v*'  # Only trigger when a version tag (e.g., v1.0.0) is pushed

jobs:
  publish:
    runs-on: ubuntu-latest

    env:
      NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  

      - name: Display Git Information
        run: |
          echo "GITHUB_REF: $GITHUB_REF"
          echo "GITHUB_SHA: $GITHUB_SHA"
          git log -1

      - name: Get the tag name
        id: get_tag
        run: echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Use the tag name
        run: echo "The tag name is $TAG_NAME"
        env:
          TAG_NAME: ${{ env.TAG_NAME }}

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.18.0
          registry-url: 'https://registry.npmjs.org'
          scope: '@wireio'
          cache: 'npm'

      - name: Check version match
        run: |
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          if [[ "v$PACKAGE_VERSION" != "$TAG_NAME" ]]; then
            echo "Error: package.json version (v$PACKAGE_VERSION) does not match the git tag ($TAG_NAME). Please update package.json and rerun the action."
            exit 1
          else
            echo "Version match âœ…"
          fi
        env:
          TAG_NAME: ${{ env.TAG_NAME }}
          
      - name: Install dependencies
        run: npm ci

      - name: Clean and Build
        run: npm run build

      - name: Publish Package
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          WEBHOOK_URL: ${{ secrets.WEBHOOK_URL }}
        run: |
          echo "Publishing package..."
          if [ -z "$NODE_AUTH_TOKEN" ]; then echo "NPM token is not set."; exit 1; fi
          if [ -z "$WEBHOOK_URL" ]; then echo "WEBHOOK_URL is not set."; exit 1; fi
          
          npm publish --access restricted --non-interactive
          
          PACKAGE_NAME=$(node -p "require('./package.json').name")
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          PUBLISH_DATE=$(date -u +"%Y-%m-%d %H:%M:%S UTC")

          curl -X POST -H 'Content-type: application/json' \
            --data '{ 
              "channel": "#npm-notifications",
              "username": "npm bot",
              "icon_url": "https://static-00.iconduck.com/assets.00/megaphone-emoji-512x390-7a60feky.png",
              "text": "#### New Deployment!\n\n**Package Name:** '"$PACKAGE_NAME"'\n**Version:** '"$PACKAGE_VERSION"'  \n**Published on:** '"$PUBLISH_DATE"'"
            }' "$WEBHOOK_URL"